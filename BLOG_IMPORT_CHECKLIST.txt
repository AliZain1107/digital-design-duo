üìã BLOG IMPORT CHECKLIST - STYLY PROJECT
=====================================================

Use this checklist when adding new blog posts to src/components/data/blogPosts.tsx

üîç PRE-IMPORT CHECKS
--------------------
‚ñ° 1. Verify the blog component file exists in src/blogPages/
   - Check exact filename (case-sensitive)
   - Ensure .tsx extension
   - Verify the file exports a React component

‚ñ° 2. Check the component name matches the filename
   - Example: AIInterior.tsx should export "AIInterior"
   - No spaces, hyphens converted to camelCase

üö´ DUPLICATE PREVENTION
-----------------------
‚ñ° 3. Check for duplicate imports
   - Search existing imports in blogPosts.tsx
   - Ensure no component is imported twice
   - Remove any commented imports that aren't used

‚ñ° 4. Check for duplicate blog post IDs
   - Search for "id: [number]" in blogPosts array
   - Use unique sequential ID numbers
   - Check both active and commented entries

‚ñ° 5. Check for duplicate slugs
   - Search for slug values in blogPosts array
   - Slugs must be unique for both English and French
   - Format: lowercase-with-hyphens-no-spaces

‚ñ° 6. Check for duplicate titles
   - Ensure no identical titles exist
   - Check both English and French versions

‚ñ° 6a. Check for commented/inactive blog posts
   - Search for "// {" in blogPosts array (commented entries)
   - If blog post exists but is commented out, consider activating instead of creating new
   - Verify component reference is correct before uncommenting
   - Fix any broken component names (e.g., RealEstateVirtualStagingMarketReality ‚Üí RealEstateVirtualStaging)

üìù IMPORT SYNTAX
----------------
‚ñ° 7. Add import statement at the top
   - Format: import ComponentName from "@/blogPages/ComponentName";
   - Place in alphabetical order
   - No spaces in path

‚ñ° 8. Verify import path is correct
   - Use @/blogPages/ prefix
   - Match exact filename
   - No .tsx extension in import

üèóÔ∏è BLOG POST OBJECT
-------------------
‚ñ° 9. Create blog post object with all required fields:
   - id: number (unique)
   - title: string (English)
   - titleFr?: string (French, optional but recommended)
   - date: string (format: "Mon DD, YYYY")
   - image: string (path starting with /)
   - slug: string (lowercase-with-hyphens)
   - slugFr?: string (French slug, optional)
   - Component: ComponentName (exact import name)

‚ñ° 10. Verify image path exists
   - Check if image file exists in public/ folder
   - Use correct path starting with /
   - Preferred formats: .webp, .jpg, .png

‚ñ° 11. Check date format consistency
   - Format: "Jun 24, 2025" or "Dec 30, 2024"
   - Use 3-letter month abbreviation
   - Include comma after day

üåê LOCALIZATION
---------------
‚ñ° 12. Add French translations (if applicable)
   - titleFr: French version of title
   - slugFr: French slug (lowercase-avec-tirets)
   - Ensure slugFr is unique

‚ñ° 13. Verify slug format
   - English: lowercase-words-separated-by-hyphens
   - French: lowercase-mots-separes-par-tirets
   - No special characters, spaces, or capitals

üß™ TESTING
----------
‚ñ° 14. Test import resolution
   - Run npm run dev
   - Check for import errors in console
   - Verify no "Failed to resolve import" messages

‚ñ° 15. Test blog post rendering
   - Navigate to /blog in browser
   - Check if new blog appears in list
   - Click on blog post to verify it loads

‚ñ° 16. Test French version (if applicable)
   - Navigate to /fr/blog
   - Check French title displays correctly
   - Test French slug works

üîÑ REACTIVATING COMMENTED POSTS
-------------------------------
If you find a commented blog post that matches your content:

‚ñ° 16a. Verify component file exists
   - Check that the .tsx file exists in src/blogPages/
   - Confirm component export name matches

‚ñ° 16b. Fix component reference if needed
   - Update Component field to match actual import name
   - Example: RealEstateVirtualStagingMarketReality ‚Üí RealEstateVirtualStaging

‚ñ° 16c. Uncomment the blog post entry
   - Remove // from the beginning of each line
   - Ensure proper formatting and commas

‚ñ° 16d. Test reactivated post
   - Run development server
   - Check blog appears in /blog listing
   - Test direct slug URL access

üîß FINAL VERIFICATION
---------------------
‚ñ° 17. Check console for errors
   - No TypeScript errors
   - No missing imports
   - No duplicate component warnings

‚ñ° 18. Verify blog post order
   - Newer posts should have higher IDs
   - Check date ordering makes sense
   - Most recent posts appear first (if sorted by date)

‚ñ° 19. Clean up unused imports
   - Remove any commented import lines
   - Remove unused components
   - Keep imports alphabetically organized

‚ñ° 20. Test build process
   - Run npm run build (if possible)
   - Ensure no build errors
   - Verify production build works

üí° COMMON ISSUES TO AVOID
-------------------------
‚ùå Duplicate import statements
‚ùå Missing component files
‚ùå Wrong component names in blog object
‚ùå Duplicate IDs or slugs
‚ùå Missing image files
‚ùå Incorrect date formats
‚ùå Typos in slug names
‚ùå Missing French translations for multilingual setup
‚ùå Adding new blog when commented version already exists
‚ùå Broken component references in commented entries

‚úÖ CHECKLIST COMPLETE
---------------------
Once all items are checked:
‚ñ° Save the file
‚ñ° Test in development server
‚ñ° Verify no console errors
‚ñ° Test blog navigation
‚ñ° Commit changes to git

üìù NOTES
--------
- Always test locally before committing
- Keep this checklist updated with new requirements
- Document any new patterns or conventions
- Backup blogPosts.tsx before making major changes

Last Updated: January 2025 